validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("../setup.R")
getwd()
source("R/setup.R")
source("setup.R")
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
{baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
})
validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
# Complications
# Macrovascular complications: UKPDS paper ESM Table 4. Macrovascular complications include CHF, IHD, MI and stroke.
# The risk factors used to predict macrovascular complications are read from the following file (UKPDS paper ESM Table 2):
macrovascular_risk_equations <- read.csv("input/UKPDS_macrovascular_coef.csv")
# The vector below contains the names of all risk factors used to predict macrovascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_macrovascular <- macrovascular_risk_equations$X[-(1:2)]
risk_factors_macrovascular
# Microvascular complications: UKPDS paper ESM Table 5. Microvascular complications include blindness, diabetic ulcer amputation and renal failure.
# The risk factors used to predict microvascular complications are read from the following file (UKPDS paper ESM Table 5):
microvascular_risk_equations <- read.csv("input/UKPDS_microvascular_coef.csv")
# The vector below contains the names of all risk factors used to predict microvascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_microvascular <- microvascular_risk_equations$X[-(1:2)]
# Risk of death: UKPDS paper ESM Table 6. Four equations depending on events and history:
mortality_risk_equations <- read.csv("input/UKPDS_mortality_coef.csv")
# The vector below contains the names of all risk factors used to predict death in the model.
risk_factors_mortality <- mortality_risk_equations$X[-(1:2)]
# Below we consider all the patient characteristics (38) that "define" a patient in this model.
risk_factors_simulation <- unique(sort(c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT",
risk_factors_macrovascular,
risk_factors_microvascular,
risk_factors_mortality)))
### UKPDS RISK FUNCTIONS ###
# Note that, with the notation used in the UKPDS paper, if ro = 1 then
# weibull distribution == exponential distribution. Thus, the same function "annual_p_weibull" can be used when an exponential
# distribution is assumed.
annual_p_weibull <- function(regression_coefficents_input, risk_factors_input, duration_diabetes_input){
risk_factors_input <- as.numeric(risk_factors_input) # delete if not needed
# Note: mind the format of the regression coefficients. It should be a list where the first two coefficients are
# lambda and ro (with the notation from UKPDS paper - hence the tail(,-2) command) and the rest are the coefficients
# for the risk factors associated to each complication.
linear_predictor <- sum(tail(regression_coefficents_input,n = -2)*c(risk_factors_input))
# Then H returns the value of the cumulative hazard function
H_t1 <- exp(regression_coefficents_input[1] + linear_predictor)*duration_diabetes_input^regression_coefficents_input[2]
H_t2 <- exp(regression_coefficents_input[1] + linear_predictor)*(1+duration_diabetes_input)^regression_coefficents_input[2]
p = 1 - exp(H_t1 -H_t2)
return(list(#H_t1 = H_t1, # no need to return the H's, keep them for now just for validation purposes
#H_t2 = H_t2,
p = p))
}
# Validation of the Weibull events
# CHF females
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.00657647
# CHF males
# Variable defined to keep track of simulation time (delete afterwards)
init <- Sys.time()
# Model function:
source("R/SMI in type II diabetes - HE model v3.R")
# Control variables of simulation
npats <- 5 # Number of patients in simulation
tx.cost <- 0 # Total treatment cost
treateff.start <- 1 # Cycle in which treatment effect starts
treateff.end <- 4 # Cycle in which treatment effect ends
treateff.decline <- 2 # Cycle in which treatment effect starts to decline linearly
treateff.hba1c <- -1.82 # Treatment effect on HbA1c (in absolute %-points HbA1c)
treateff.hdl <- 0 # Treatment effect on HDL-cholesterol (absolute effect, which unit??)
treateff.ldl <- 0 # Treatment effect on LDL-cholesterol (absolute effect, which unit??)
# The sim.vars object collects all parameters that define the simulation into one object
# Then, it is saved with the output of the simulation. This way, if we  have multiple output files, we always have the information
# on the relevant input parameters that were used to produce the output.
sim.vars <- list(npats, tx.cost, mget(apropos('treateff.')))
# A patient-level model make use of patient characteristics.
# QUESTION: still some issues, ask for units.
baseline_characteristics <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# baseline_characteristics <- read.csv("/input/UK/baseline_characteristics_UK_rank_1_study_pop.csv", sep=",")
# Direct costs of diabetes-related complications for UK are age-gender dependent.
male_cost_inputs   <- read.csv("input/UK/Event cost male 2020.csv", sep=",")
female_cost_inputs <- read.csv("input/UK/Event cost female 2020.csv", sep=",")
# When a societal perspective is adopted, we also have future costs. This are obtained from the PAID online tool.
future_medical_cost_inputs <- read.csv("input/UK/UKPAID__AllORUnrelated_Costs_2020.csv", sep=",") # Ingelin: 15/12/2020
future_nonmedical_cost_inputs <- read.csv("input/UK/UK_nonmedical_futurecosts_data.csv", sep=",") # UK costs updated 11/12/2020 - corrected version from Hamraz
# Utilities are UK-based and age/gender dependent
qol_inputs <- read.csv("input/UK/qol_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats,  #patient_size_input:
1,  #female_input, 1 = female
tx.cost, #tx_cost_input --> Gimon
c(treateff.hba1c,treateff.start,treateff.end,treateff.decline), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff.hdl,treateff.start,treateff.end,treateff.decline),  #treatment_effect_HDL_input
c(treateff.ldl, treateff.start,treateff.end,treateff.decline),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
#View(sim_CE_results_female_table)
sim_clinical_results_female_table <- matrix(c(sim_results_female$mean_life_expectancy,
sim_results_female$mean_CHF_rate,
sim_results_female$mean_MI_rate,
sim_results_female$mean_BLIND_rate,
sim_results_female$mean_ULCER_rate,
sim_results_female$mean_AMP1_rate,
sim_results_female$mean_AMP2_rate,
sim_results_female$mean_RENAL_rate,
sim_results_female$mean_STROKE_rate), nrow = 1)
colnames(sim_clinical_results_female_table) <- c("Life expectancy", "CHF rate", "MI rate", "Blindness rate", "Ulcer rate",
"1st amputation rate", "2nd amputation rate", "Renal failure rate", "Stroke rate")
rownames(sim_clinical_results_female_table) <- "Intervention"
#View(sim_clinical_results_female_table)
sim_clinical_results_female_table
sim_CE_results_female_table
# Variable defined to keep track of simulation time (delete afterwards)
init <- Sys.time()
# Model function:
source("R/SMI in type II diabetes - HE model v3.R")
# Control variables of simulation
npats <- 5 # Number of patients in simulation
tx.cost <- 1000000 # Total treatment cost
treateff.start <- 1 # Cycle in which treatment effect starts
treateff.end <- 4 # Cycle in which treatment effect ends
treateff.decline <- 2 # Cycle in which treatment effect starts to decline linearly
treateff.hba1c <- -1.82 # Treatment effect on HbA1c (in absolute %-points HbA1c)
treateff.hdl <- 0 # Treatment effect on HDL-cholesterol (absolute effect, which unit??)
treateff.ldl <- 0 # Treatment effect on LDL-cholesterol (absolute effect, which unit??)
# The sim.vars object collects all parameters that define the simulation into one object
# Then, it is saved with the output of the simulation. This way, if we  have multiple output files, we always have the information
# on the relevant input parameters that were used to produce the output.
sim.vars <- list(npats, tx.cost, mget(apropos('treateff.')))
# A patient-level model make use of patient characteristics.
# QUESTION: still some issues, ask for units.
baseline_characteristics <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# baseline_characteristics <- read.csv("/input/UK/baseline_characteristics_UK_rank_1_study_pop.csv", sep=",")
# Direct costs of diabetes-related complications for UK are age-gender dependent.
male_cost_inputs   <- read.csv("input/UK/Event cost male 2020.csv", sep=",")
female_cost_inputs <- read.csv("input/UK/Event cost female 2020.csv", sep=",")
# When a societal perspective is adopted, we also have future costs. This are obtained from the PAID online tool.
future_medical_cost_inputs <- read.csv("input/UK/UKPAID__AllORUnrelated_Costs_2020.csv", sep=",") # Ingelin: 15/12/2020
future_nonmedical_cost_inputs <- read.csv("input/UK/UK_nonmedical_futurecosts_data.csv", sep=",") # UK costs updated 11/12/2020 - corrected version from Hamraz
# Utilities are UK-based and age/gender dependent
qol_inputs <- read.csv("input/UK/qol_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats,  #patient_size_input:
1,  #female_input, 1 = female
tx.cost, #tx_cost_input --> Gimon
c(treateff.hba1c,treateff.start,treateff.end,treateff.decline), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff.hdl,treateff.start,treateff.end,treateff.decline),  #treatment_effect_HDL_input
c(treateff.ldl, treateff.start,treateff.end,treateff.decline),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
#View(sim_CE_results_female_table)
sim_CE_results_female_table
# Variable defined to keep track of simulation time (delete afterwards)
init <- Sys.time()
# Model function:
source("R/SMI in type II diabetes - HE model v3.R")
# Control variables of simulation
npats <- 5 # Number of patients in simulation
tx_cost_input <- 0 # Total treatment cost
treateff.start <- 1 # Cycle in which treatment effect starts
treateff.end <- 4 # Cycle in which treatment effect ends
treateff.decline <- 2 # Cycle in which treatment effect starts to decline linearly
treateff.hba1c <- -1.82 # Treatment effect on HbA1c (in absolute %-points HbA1c)
treateff.hdl <- 0 # Treatment effect on HDL-cholesterol (absolute effect, which unit??)
treateff.ldl <- 0 # Treatment effect on LDL-cholesterol (absolute effect, which unit??)
# The sim.vars object collects all parameters that define the simulation into one object
# Then, it is saved with the output of the simulation. This way, if we  have multiple output files, we always have the information
# on the relevant input parameters that were used to produce the output.
sim.vars <- list(npats, tx_cost_input, mget(apropos('treateff.')))
# A patient-level model make use of patient characteristics.
# QUESTION: still some issues, ask for units.
baseline_characteristics <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# baseline_characteristics <- read.csv("/input/UK/baseline_characteristics_UK_rank_1_study_pop.csv", sep=",")
# Direct costs of diabetes-related complications for UK are age-gender dependent.
male_cost_inputs   <- read.csv("input/UK/Event cost male 2020.csv", sep=",")
female_cost_inputs <- read.csv("input/UK/Event cost female 2020.csv", sep=",")
# When a societal perspective is adopted, we also have future costs. This are obtained from the PAID online tool.
future_medical_cost_inputs <- read.csv("input/UK/UKPAID__AllORUnrelated_Costs_2020.csv", sep=",") # Ingelin: 15/12/2020
future_nonmedical_cost_inputs <- read.csv("input/UK/UK_nonmedical_futurecosts_data.csv", sep=",") # UK costs updated 11/12/2020 - corrected version from Hamraz
# Utilities are UK-based and age/gender dependent
qol_inputs <- read.csv("input/UK/qol_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats,  #patient_size_input:
1,  #female_input, 1 = female
tx_cost_input, #tx_cost_input
c(treateff.hba1c,treateff.start,treateff.end,treateff.decline), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff.hdl,treateff.start,treateff.end,treateff.decline),  #treatment_effect_HDL_input
c(treateff.ldl, treateff.start,treateff.end,treateff.decline),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
#View(sim_CE_results_female_table)
sim_CE_results_female_table
# Variable defined to keep track of simulation time (delete afterwards)
init <- Sys.time()
# Model function:
source("R/SMI in type II diabetes - HE model v3.R")
# Control variables of simulation
npats_input <- 5 # Number of patients in simulation
tx_cost_input <- 0 # Total treatment cost
treateff.start <- 1 # Cycle in which treatment effect starts
treateff.end <- 4 # Cycle in which treatment effect ends
treateff.decline <- 2 # Cycle in which treatment effect starts to decline linearly
treateff.hba1c <- -1.82 # Treatment effect on HbA1c (in absolute %-points HbA1c)
treateff.hdl <- 0 # Treatment effect on HDL-cholesterol (absolute effect, which unit??)
treateff.ldl <- 0 # Treatment effect on LDL-cholesterol (absolute effect, which unit??)
# The sim.vars object collects all parameters that define the simulation into one object
# Then, it is saved with the output of the simulation. This way, if we  have multiple output files, we always have the information
# on the relevant input parameters that were used to produce the output.
sim.vars <- list(npats_input, tx_cost_input, mget(apropos('treateff.')))
# A patient-level model make use of patient characteristics.
# QUESTION: still some issues, ask for units.
baseline_characteristics <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# baseline_characteristics <- read.csv("/input/UK/baseline_characteristics_UK_rank_1_study_pop.csv", sep=",")
# Direct costs of diabetes-related complications for UK are age-gender dependent.
male_cost_inputs   <- read.csv("input/UK/Event cost male 2020.csv", sep=",")
female_cost_inputs <- read.csv("input/UK/Event cost female 2020.csv", sep=",")
# When a societal perspective is adopted, we also have future costs. This are obtained from the PAID online tool.
future_medical_cost_inputs <- read.csv("input/UK/UKPAID__AllORUnrelated_Costs_2020.csv", sep=",") # Ingelin: 15/12/2020
future_nonmedical_cost_inputs <- read.csv("input/UK/UK_nonmedical_futurecosts_data.csv", sep=",") # UK costs updated 11/12/2020 - corrected version from Hamraz
# Utilities are UK-based and age/gender dependent
qol_inputs <- read.csv("input/UK/qol_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats_input,  #patient_size_input:
1,  #female_input, 1 = female
tx_cost_input, #tx_cost_input
c(treateff.hba1c,treateff.start,treateff.end,treateff.decline), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff.hdl,treateff.start,treateff.end,treateff.decline),  #treatment_effect_HDL_input
c(treateff.ldl, treateff.start,treateff.end,treateff.decline),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
#View(sim_CE_results_female_table)
sim_clinical_results_female_table <- matrix(c(sim_results_female$mean_life_expectancy,
sim_results_female$mean_CHF_rate,
sim_results_female$mean_MI_rate,
sim_results_female$mean_BLIND_rate,
sim_results_female$mean_ULCER_rate,
sim_results_female$mean_AMP1_rate,
sim_results_female$mean_AMP2_rate,
sim_results_female$mean_RENAL_rate,
sim_results_female$mean_STROKE_rate), nrow = 1)
colnames(sim_clinical_results_female_table) <- c("Life expectancy", "CHF rate", "MI rate", "Blindness rate", "Ulcer rate",
"1st amputation rate", "2nd amputation rate", "Renal failure rate", "Stroke rate")
rownames(sim_clinical_results_female_table) <- "Intervention"
#View(sim_clinical_results_female_table)
sim_CE_results_female_table
# Variable defined to keep track of simulation time (delete afterwards)
init <- Sys.time()
# Model function:
source("R/SMI in type II diabetes - HE model v3.R")
# Control variables of simulation
npats_input <- 5 # Number of patients in simulation
tx_cost_input <- 0 # Total treatment cost
treateff_start_input <- 1 # Cycle in which treatment effect starts
treateff.end <- 4 # Cycle in which treatment effect ends
treateff.decline <- 2 # Cycle in which treatment effect starts to decline linearly
treateff.hba1c <- -1.82 # Treatment effect on HbA1c (in absolute %-points HbA1c)
treateff.hdl <- 0 # Treatment effect on HDL-cholesterol (absolute effect, which unit??)
treateff.ldl <- 0 # Treatment effect on LDL-cholesterol (absolute effect, which unit??)
# The sim.vars object collects all parameters that define the simulation into one object
# Then, it is saved with the output of the simulation. This way, if we  have multiple output files, we always have the information
# on the relevant input parameters that were used to produce the output.
sim.vars <- list(npats_input, tx_cost_input, mget(apropos('treateff.')))
# A patient-level model make use of patient characteristics.
baseline_characteristics <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# baseline_characteristics <- read.csv("/input/UK/baseline_characteristics_UK_rank_1_study_pop.csv", sep=",")
# Direct costs of diabetes-related complications for UK are age-gender dependent.
male_cost_inputs   <- read.csv("input/UK/Event cost male 2020.csv", sep=",")
female_cost_inputs <- read.csv("input/UK/Event cost female 2020.csv", sep=",")
# When a societal perspective is adopted, we also have future costs. This are obtained from the PAID online tool.
future_medical_cost_inputs <- read.csv("input/UK/UKPAID__AllORUnrelated_Costs_2020.csv", sep=",") # Ingelin: 15/12/2020
future_nonmedical_cost_inputs <- read.csv("input/UK/UK_nonmedical_futurecosts_data.csv", sep=",") # UK costs updated 11/12/2020 - corrected version from Hamraz
# Utilities are UK-based and age/gender dependent
qol_inputs <- read.csv("input/UK/qol_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats_input,  #patient_size_input:
1,  #female_input, 1 = female
tx_cost_input, #tx_cost_input
c(treateff.hba1c,treateff_start_input,treateff.end,treateff.decline), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff.hdl,treateff_start_input,treateff.end,treateff.decline),  #treatment_effect_HDL_input
c(treateff.ldl, treateff_start_input,treateff.end,treateff.decline),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
#View(sim_CE_results_female_table)
sim_CE_results_female_table
# Variable defined to keep track of simulation time (delete afterwards)
init <- Sys.time()
# Model function:
source("R/SMI in type II diabetes - HE model v3.R")
# Control variables of simulation
npats_input <- 5 # Number of patients in simulation
tx_cost_input <- 0 # Total treatment cost
treateff_start_input   <- 1 # Cycle in which treatment effect starts
treateff_end_input     <- 4 # Cycle in which treatment effect ends
treateff_decline_input <- 2 # Cycle in which treatment effect starts to decline linearly
treateff.hba1c <- -1.82 # Treatment effect on HbA1c (in absolute %-points HbA1c)
treateff.hdl <- 0 # Treatment effect on HDL-cholesterol (absolute effect, which unit??)
treateff.ldl <- 0 # Treatment effect on LDL-cholesterol (absolute effect, which unit??)
# The sim.vars object collects all parameters that define the simulation into one object
# Then, it is saved with the output of the simulation. This way, if we  have multiple output files, we always have the information
# on the relevant input parameters that were used to produce the output.
sim.vars <- list(npats_input, tx_cost_input, mget(apropos('treateff.')))
# A patient-level model make use of patient characteristics.
baseline_characteristics <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# baseline_characteristics <- read.csv("/input/UK/baseline_characteristics_UK_rank_1_study_pop.csv", sep=",")
# Direct costs of diabetes-related complications for UK are age-gender dependent.
male_cost_inputs   <- read.csv("input/UK/Event cost male 2020.csv", sep=",")
female_cost_inputs <- read.csv("input/UK/Event cost female 2020.csv", sep=",")
# When a societal perspective is adopted, we also have future costs. This are obtained from the PAID online tool.
future_medical_cost_inputs <- read.csv("input/UK/UKPAID__AllORUnrelated_Costs_2020.csv", sep=",") # Ingelin: 15/12/2020
future_nonmedical_cost_inputs <- read.csv("input/UK/UK_nonmedical_futurecosts_data.csv", sep=",") # UK costs updated 11/12/2020 - corrected version from Hamraz
# Utilities are UK-based and age/gender dependent
qol_inputs <- read.csv("input/UK/qol_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats_input,  #patient_size_input:
1,  #female_input, 1 = female
tx_cost_input, #tx_cost_input
c(treateff.hba1c,treateff_start_input,treateff_end_input,treateff_decline_input), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff.hdl,treateff_start_input,treateff_end_input,treateff_decline_input),  #treatment_effect_HDL_input
c(treateff.ldl, treateff_start_input,treateff_end_input,treateff_decline_input),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
#View(sim_CE_results_female_table)
sim_CE_results_female_table
# Variable defined to keep track of simulation time (delete afterwards)
init <- Sys.time()
# Model function:
source("R/SMI in type II diabetes - HE model v3.R")
# Control variables of simulation
npats_input <- 5 # Number of patients in simulation
tx_cost_input <- 0 # Total treatment cost
treateff_start_input   <- 1 # Cycle in which treatment effect starts
treateff_end_input     <- 4 # Cycle in which treatment effect ends
treateff_decline_input <- 2 # Cycle in which treatment effect starts to decline linearly
treateff_hba1c_input <- -1.82 # Treatment effect on HbA1c (in absolute %-points HbA1c)
treateff_hdl_input   <- 0 # Treatment effect on HDL-cholesterol (absolute effect, which unit??)
treateff_ldl_input   <- 0 # Treatment effect on LDL-cholesterol (absolute effect, which unit??)
# The sim.vars object collects all parameters that define the simulation into one object
# Then, it is saved with the output of the simulation. This way, if we  have multiple output files, we always have the information
# on the relevant input parameters that were used to produce the output.
sim.vars <- list(npats_input, tx_cost_input, mget(apropos('treateff.')))
# A patient-level model make use of patient characteristics.
baseline_characteristics <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# baseline_characteristics <- read.csv("/input/UK/baseline_characteristics_UK_rank_1_study_pop.csv", sep=",")
# Direct costs of diabetes-related complications for UK are age-gender dependent.
male_cost_inputs   <- read.csv("input/UK/Event cost male 2020.csv", sep=",")
female_cost_inputs <- read.csv("input/UK/Event cost female 2020.csv", sep=",")
# When a societal perspective is adopted, we also have future costs. This are obtained from the PAID online tool.
future_medical_cost_inputs    <- read.csv("input/UK/UKPAID__AllORUnrelated_Costs_2020.csv", sep=",") # Ingelin: 15/12/2020
future_nonmedical_cost_inputs <- read.csv("input/UK/UK_nonmedical_futurecosts_data.csv", sep=",") # UK costs updated 11/12/2020 - corrected version from Hamraz
# Utilities are UK-based and age/gender dependent
qol_inputs <- read.csv("input/UK/qol_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats_input,  #patient_size_input:
1,  #female_input, 1 = female
tx_cost_input, #tx_cost_input
c(treateff_hba1c_input,treateff_start_input,treateff_end_input,treateff_decline_input), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff_hdl_input,treateff_start_input,treateff_end_input,treateff_decline_input),  #treatment_effect_HDL_input
c(treateff_ldl_input, treateff_start_input,treateff_end_input,treateff_decline_input),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
#View(sim_CE_results_female_table)
sim_CE_results_female_table
