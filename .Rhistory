qol_events_inputs <- read.csv("input/UK/qol_events_inputs_UK.csv", sep=",")
# TODO: also extract output processing scripts to here.
### Run the model below for females and males separately.
##### Females #####
# Intervention
sim_results_female <- SMDMII_model_simulation(npats_input,  #patient_size_input:
1,  #female_input, 1 = female
tx_cost_input, #tx_cost_input
c(treateff_hba1c_input,treateff_start_input,treateff_end_input,treateff_decline_input), #treatment_effect_HbA1c_input --> from COMPAR + Assumption
c(treateff_hdl_input,treateff_start_input,treateff_end_input,treateff_decline_input),  #treatment_effect_HDL_input
c(treateff_ldl_input, treateff_start_input,treateff_end_input,treateff_decline_input),  #treatment_effect_LDL_input --> from COMPAR + Assumption
0, #treatment_effect_BMI_input from MH2020
0.035, #cost_disc_rate_input
0.035, #qol_disc_rate_input
65, #retirement_age_input
0, #run_PSA_input, 0 == no PSA
77 #seed_input
)
# Results tables
sim_CE_results_female_table <- matrix(c(sim_results_female$mean_complication_costs,sim_results_female$mean_nocomp_costs, sim_results_female$mean_tx_costs,
sim_results_female$mean_inf_care_costs, sim_results_female$mean_prod_loss_costs,
sim_results_female$mean_future_medical_costs, sim_results_female$mean_future_nonmedical_costs,
sim_results_female$mean_total_costs, sim_results_female$mean_total_qalys), nrow = 1)
colnames(sim_CE_results_female_table) <- c("Complication costs", "No complication costs", "Tx costs","Informal care costs", "Productivity costs",
"Future medical costs", "Future non-medical costs", "Total costs", "Total QALYs")
rownames(sim_CE_results_female_table) <- "Intervention"
View(sim_CE_results_female_table)
sim_clinical_results_female_table <- matrix(c(sim_results_female$mean_life_expectancy,
sim_results_female$mean_CHF_rate,
sim_results_female$mean_MI_rate,
sim_results_female$mean_BLIND_rate,
sim_results_female$mean_ULCER_rate,
sim_results_female$mean_AMP1_rate,
sim_results_female$mean_AMP2_rate,
sim_results_female$mean_RENAL_rate,
sim_results_female$mean_STROKE_rate), nrow = 1)
colnames(sim_clinical_results_female_table) <- c("Life expectancy", "CHF rate", "MI rate", "Blindness rate", "Ulcer rate",
"1st amputation rate", "2nd amputation rate", "Renal failure rate", "Stroke rate")
rownames(sim_clinical_results_female_table) <- "Intervention"
View(sim_clinical_results_female_table)
#Comparator
#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# We can change patient characteristics for testing purposes below (un-comment)
# Special interest on those characteristics that are targeted as treatment effect: see how a expected treatment effect
# would impact the annual risk.
# validation_patient$CURR.AGE <- 35
# validation_patient$HbA1c <- 3.8
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
validation_patient$SBP
source('~/GitHub/COMPAR-EU_diabetes_model/R/validation_ukpds.R', echo=TRUE)
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
validation_patient
validation_patient$SBP
source('~/GitHub/COMPAR-EU_diabetes_model/R/validation_ukpds.R', echo=TRUE)
validation_patient$SBP
# IHD females
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.0009983311
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FSTROKE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FSTROKE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
0.008*1000
install.packages(c("broom", "cli", "dbplyr", "devtools", "gh", "insight", "muhaz", "packrat", "pkgload", "processx", "remotes", "reprex", "tinytex", "WDI"))
install.packages(c("broom", "cli", "dbplyr", "devtools", "gh", "insight", "muhaz", "packrat", "pkgload", "processx", "remotes", "reprex", "tinytex", "WDI"))
install.packages(c("broom", "cli", "dbplyr", "devtools", "gh", "insight", "muhaz", "packrat", "pkgload", "processx", "remotes", "reprex", "tinytex", "WDI"))
install.packages(c("broom", "cli", "dbplyr", "devtools", "gh", "insight", "muhaz", "packrat", "pkgload", "processx", "remotes", "reprex", "tinytex", "WDI"))
install.packages(c("broom", "cli", "dbplyr", "devtools", "gh", "insight", "muhaz", "packrat", "pkgload", "processx", "remotes", "reprex", "tinytex", "WDI"))
source('~/GitHub/COMPAR-EU_diabetes_model/setup.R', echo=TRUE)
source('~/GitHub/COMPAR-EU_diabetes_model/R/Analysis script template.R', echo=TRUE)
source('~/GitHub/COMPAR-EU_diabetes_model/R/Analysis script template.R', echo=TRUE)
source('~/GitHub/COMPAR-EU_diabetes_model/R/Analysis script template.R', echo=TRUE)
baseline_characteristics
source('~/GitHub/COMPAR-EU_diabetes_model/R/Analysis script template.R', echo=TRUE)
npats_input
source('~/GitHub/COMPAR-EU_diabetes_model/R/Analysis script template.R', echo=TRUE)
baseline_characteristics
sim.vars
source('~/GitHub/COMPAR-EU_diabetes_model/R/Analysis script template.R', echo=TRUE)
npats_input
sim_results_female
sim_results_male
sim_results_male_comp
sim_results_male_comp$simulation_patients_history
View(Vim_results_male_comp$simulation_patients_history)
View(sim_results_male_comp$simulation_patients_history)
dim(sim_results_male_comp$simulation_patients_history)
source('~/GitHub/COMPAR-EU_diabetes_model/R/Analysis script template.R', echo=TRUE)
sim_results_female_comp
sim_results_female_comp$simulation_patients_history
sim_results_female_comp$simulation_patients_history
head(sim_results_female_comp$simulation_patients_history)
sim_results_female_comp$simulation_patients_history$SDURATION
max(sim_results_female_comp$simulation_patients_history$SDURATION)
which(sim_results_female_comp$simulation_patients_history$SDURATION == 1)
sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),]
dim(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),])
head(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),])
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),])
event_vars
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars])
max(sim_results_female_comp$simulation_patients_history$SDURATION)
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
n_years
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars])
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 2),event_vars])
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 42),event_vars])
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 40),event_vars])
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars])
1/6
1-1/6
1-1/6 - (1-1/5)
(1-1/6) - (1-1/5)
(1-1/5)
(1-1/6) -1/5
(1-1/6)
(1-1/6)-1/5
(1-1/6)-(1/5)-(1/4)
(1-1/6)
1*(1-1/6)
1*(1-1/6)*4/5
1*(1-1/6)*4/5*3/4
colSums(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars])
1-1/5
colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars])
1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars])
1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars])
1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 2),event_vars])
current_survival
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
current_survival
current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == 1),event_vars]))
0.994*0.998
i
KM_data <- data.frame(NA)
KM_data
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
KM_data <- data.frame(NA)
for(i in 1:n_years){
current_survival <- current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
KM_data[i,] <- current_survival
}
n_years
KM_data
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
KM_data <- data.frame(event_vars)
KM_data
>data.frame()
data.frame
?data.frame
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
KM_data <- data.frame(event_vars = NA)
KM_data
sim_results_female_comp$simulation_patients_history[,event_vars]
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data
KM_data <- KM_data[FALSE,]
KM_data
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
for(i in 1:n_years){
current_survival <- current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
KM_data[i,] <- current_survival
}
KM_data
# Results per year
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
for(i in 1:n_years){
current_survival <- current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
KM_data <- rbind(KM_data, current_survival)
}
KM_data
KM_data
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- 1
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
KM_data
current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
current_survival
rep(1,9)
event_vars
length(event_vars)
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- rep(1,length(event_vars))
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
current_survival <- current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
current_survival
current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
# Results per year
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- rep(1,length(event_vars))
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
for(i in 1:n_years){
current_survival <- current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
KM_data <- rbind(KM_data, current_survival)
}
current_survival
KM_data
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- rep(1,length(event_vars))
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
KM_data
current_survival
KM_data[i,]
# Results per year
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- rep(1,length(event_vars))
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
for(i in 1:n_years){
current_survival <- current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
KM_data[i,] <- current_survival
}
KM_data
1:n_years
1:n_years
n_years
n_years <- 1:max(sim_results_female_comp$simulation_patients_history$SDURATION)
current_survival <- rep(1,length(event_vars))
KM_data <- sim_results_female_comp$simulation_patients_history[,event_vars]
KM_data <- KM_data[FALSE,]
for(i in n_years){
current_survival <- current_survival*(1-colMeans(sim_results_female_comp$simulation_patients_history[which(sim_results_female_comp$simulation_patients_history$SDURATION == i),event_vars]))
KM_data[i,] <- current_survival
}
KM_data
tail(MK_data)
tail(KM_data)
View(tail(KM_data))
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# We can change patient characteristics for testing purposes below (un-comment)
# Special interest on those characteristics that are targeted as treatment effect: see how a expected treatment effect
# would impact the annual risk.
# validation_patient$CURR.AGE <- 35
# validation_patient$HbA1c <- 3.8
# validation_patient$SBP <- 129
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
# Complications
# Macrovascular complications: UKPDS paper ESM Table 4. Macrovascular complications include CHF, IHD, MI and stroke.
# The risk factors used to predict macrovascular complications are read from the following file (UKPDS paper ESM Table 2):
macrovascular_risk_equations <- read.csv("input/UKPDS_macrovascular_coef.csv")
# The vector below contains the names of all risk factors used to predict macrovascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_macrovascular <- macrovascular_risk_equations$X[-(1:2)]
# Microvascular complications: UKPDS paper ESM Table 5. Microvascular complications include blindness, diabetic ulcer amputation and renal failure.
# The risk factors used to predict microvascular complications are read from the following file (UKPDS paper ESM Table 5):
microvascular_risk_equations <- read.csv("input/UKPDS_microvascular_coef.csv")
# The vector below contains the names of all risk factors used to predict microvascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_microvascular <- microvascular_risk_equations$X[-(1:2)]
# Risk of death: UKPDS paper ESM Table 6. Four equations depending on events and history:
mortality_risk_equations <- read.csv("input/UKPDS_mortality_coef.csv")
# The vector below contains the names of all risk factors used to predict death in the model.
risk_factors_mortality <- mortality_risk_equations$X[-(1:2)]
# Below we consider all the patient characteristics (38) that "define" a patient in this model.
risk_factors_simulation <- unique(sort(c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT",
risk_factors_macrovascular,
risk_factors_microvascular,
risk_factors_mortality)))
### UKPDS RISK FUNCTIONS ###
# Note that, with the notation used in the UKPDS paper, if ro = 1 then
# weibull distribution == exponential distribution. Thus, the same function "annual_p_weibull" can be used when an exponential
# distribution is assumed.
annual_p_weibull <- function(regression_coefficents_input, risk_factors_input, duration_diabetes_input){
risk_factors_input <- as.numeric(risk_factors_input) # delete if not needed
# Note: mind the format of the regression coefficients. It should be a list where the first two coefficients are
# lambda and ro (with the notation from UKPDS paper - hence the tail(,-2) command) and the rest are the coefficients
# for the risk factors associated to each complication.
linear_predictor <- sum(tail(regression_coefficents_input,n = -2)*c(risk_factors_input))
# Then H returns the value of the cumulative hazard function
H_t1 <- exp(regression_coefficents_input[1] + linear_predictor)*duration_diabetes_input^regression_coefficents_input[2]
H_t2 <- exp(regression_coefficents_input[1] + linear_predictor)*(1+duration_diabetes_input)^regression_coefficents_input[2]
p = 1 - exp(H_t1 -H_t2)
return(list(#H_t1 = H_t1, # no need to return the H's, keep them for now just for validation purposes
#H_t2 = H_t2,
p = p))
}
# Validation of the Weibull events
# CHF females
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.00657647
# CHF males
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.00657647
# Is the predicted probability plausible? --> Gimon
# Is a difference between gender expected? NO
# IHD females
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.0009983311
# IHD males
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.001698897
# Is the predicted probability plausible? --> Gimon
# Is a difference between gender expected? Yes, negative coefficient for females.
# First MI males (for females there is a different equation)
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.002285789
# Is the predicted probability plausible? --> Gimon
# First MI females (for males there is a different equation)
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
macrovascular_risk_equations$FMIFEMALE
validation_patient[1,]
validation_patient[2,]
validation_patient[2,]-validation_patient[2,]
validation_patient[2,]-validation_patient[1,]
risk_factors_macrovascular
risk_factors_macrovascular
macrovascular_risk_equations
macrovascular_risk_equations$FMIFEMALE
validation_patient[1,"YEAR"]
validation_patient[2,"YEAR"]
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# We can change patient characteristics for testing purposes below (un-comment)
# Special interest on those characteristics that are targeted as treatment effect: see how a expected treatment effect
# would impact the annual risk.
# validation_patient$CURR.AGE <- 35
# validation_patient$HbA1c <- 3.8
# validation_patient$SBP <- 129
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
# Complications
# Macrovascular complications: UKPDS paper ESM Table 4. Macrovascular complications include CHF, IHD, MI and stroke.
# The risk factors used to predict macrovascular complications are read from the following file (UKPDS paper ESM Table 2):
macrovascular_risk_equations <- read.csv("input/UKPDS_macrovascular_coef.csv")
# The vector below contains the names of all risk factors used to predict macrovascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_macrovascular <- macrovascular_risk_equations$X[-(1:2)]
# Microvascular complications: UKPDS paper ESM Table 5. Microvascular complications include blindness, diabetic ulcer amputation and renal failure.
# The risk factors used to predict microvascular complications are read from the following file (UKPDS paper ESM Table 5):
microvascular_risk_equations <- read.csv("input/UKPDS_microvascular_coef.csv")
# The vector below contains the names of all risk factors used to predict microvascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_microvascular <- microvascular_risk_equations$X[-(1:2)]
# Risk of death: UKPDS paper ESM Table 6. Four equations depending on events and history:
mortality_risk_equations <- read.csv("input/UKPDS_mortality_coef.csv")
# The vector below contains the names of all risk factors used to predict death in the model.
risk_factors_mortality <- mortality_risk_equations$X[-(1:2)]
# Below we consider all the patient characteristics (38) that "define" a patient in this model.
risk_factors_simulation <- unique(sort(c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT",
risk_factors_macrovascular,
risk_factors_microvascular,
risk_factors_mortality)))
### UKPDS RISK FUNCTIONS ###
# Note that, with the notation used in the UKPDS paper, if ro = 1 then
# weibull distribution == exponential distribution. Thus, the same function "annual_p_weibull" can be used when an exponential
# distribution is assumed.
annual_p_weibull <- function(regression_coefficents_input, risk_factors_input, duration_diabetes_input){
risk_factors_input <- as.numeric(risk_factors_input) # delete if not needed
# Note: mind the format of the regression coefficients. It should be a list where the first two coefficients are
# lambda and ro (with the notation from UKPDS paper - hence the tail(,-2) command) and the rest are the coefficients
# for the risk factors associated to each complication.
linear_predictor <- sum(tail(regression_coefficents_input,n = -2)*c(risk_factors_input))
print(linear_predictor)
# Then H returns the value of the cumulative hazard function
H_t1 <- exp(regression_coefficents_input[1] + linear_predictor)*duration_diabetes_input^regression_coefficents_input[2]
H_t2 <- exp(regression_coefficents_input[1] + linear_predictor)*(1+duration_diabetes_input)^regression_coefficents_input[2]
p = 1 - exp(H_t1 -H_t2)
return(list(#H_t1 = H_t1, # no need to return the H's, keep them for now just for validation purposes
#H_t2 = H_t2,
p = p))
}
# Validation of the Weibull events
# CHF females
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.00657647
# CHF males
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.00657647
# Is the predicted probability plausible? --> Gimon
# Is a difference between gender expected? NO
# IHD females
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.0009983311
# IHD males
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.001698897
# Is the predicted probability plausible? --> Gimon
# Is a difference between gender expected? Yes, negative coefficient for females.
# First MI males (for females there is a different equation)
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.002285789
# Is the predicted probability plausible? --> Gimon
# First MI females (for males there is a different equation)
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.02571863
# Is the predicted probability plausible? --> Gimon. It looks quite large compared to males. Does it make sense?
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
macrovascular_risk_equations$FMIFEMALE
validation_patient[1,] %>% select(risk_factors_macrovascular)
macrovascular_risk_equations$FMIFEMALE[-2]
macrovascular_risk_equations$FMIFEMALE
length(macrovascular_risk_equations$FMIFEMALE)
macrovascular_risk_equations$FMIFEMALE[3:24]
macrovascular_risk_equations$FMIFEMALE[3:24]*linear_predictor
macrovascular_risk_equations$FMIFEMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular)
sum(macrovascular_risk_equations$FMIFEMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular))
macrovascular_risk_equations$FMIMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular)
sum(macrovascular_risk_equations$FMIMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular))
validation_patient[1,] %>% select(risk_factors_macrovascular)
macrovascular_risk_equations
