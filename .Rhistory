#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# We can change patient characteristics for testing purposes below (un-comment)
# Special interest on those characteristics that are targeted as treatment effect: see how a expected treatment effect
# would impact the annual risk.
# validation_patient$CURR.AGE <- 35
# validation_patient$HbA1c <- 3.8
# validation_patient$SBP <- 129
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
# Complications
# Macrovascular complications: UKPDS paper ESM Table 4. Macrovascular complications include CHF, IHD, MI and stroke.
# The risk factors used to predict macrovascular complications are read from the following file (UKPDS paper ESM Table 2):
macrovascular_risk_equations <- read.csv("input/UKPDS_macrovascular_coef.csv")
# The vector below contains the names of all risk factors used to predict macrovascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_macrovascular <- macrovascular_risk_equations$X[-(1:2)]
# Microvascular complications: UKPDS paper ESM Table 5. Microvascular complications include blindness, diabetic ulcer amputation and renal failure.
# The risk factors used to predict microvascular complications are read from the following file (UKPDS paper ESM Table 5):
microvascular_risk_equations <- read.csv("input/UKPDS_microvascular_coef.csv")
# The vector below contains the names of all risk factors used to predict microvascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_microvascular <- microvascular_risk_equations$X[-(1:2)]
# Risk of death: UKPDS paper ESM Table 6. Four equations depending on events and history:
mortality_risk_equations <- read.csv("input/UKPDS_mortality_coef.csv")
# The vector below contains the names of all risk factors used to predict death in the model.
risk_factors_mortality <- mortality_risk_equations$X[-(1:2)]
# Below we consider all the patient characteristics (38) that "define" a patient in this model.
risk_factors_simulation <- unique(sort(c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT",
risk_factors_macrovascular,
risk_factors_microvascular,
risk_factors_mortality)))
### UKPDS RISK FUNCTIONS ###
# Note that, with the notation used in the UKPDS paper, if ro = 1 then
# weibull distribution == exponential distribution. Thus, the same function "annual_p_weibull" can be used when an exponential
# distribution is assumed.
annual_p_weibull <- function(regression_coefficents_input, risk_factors_input, duration_diabetes_input){
risk_factors_input <- as.numeric(risk_factors_input) # delete if not needed
# Note: mind the format of the regression coefficients. It should be a list where the first two coefficients are
# lambda and ro (with the notation from UKPDS paper - hence the tail(,-2) command) and the rest are the coefficients
# for the risk factors associated to each complication.
linear_predictor <- sum(tail(regression_coefficents_input,n = -2)*c(risk_factors_input))
print(linear_predictor)
# Then H returns the value of the cumulative hazard function
H_t1 <- exp(regression_coefficents_input[1] + linear_predictor)*duration_diabetes_input^regression_coefficents_input[2]
H_t2 <- exp(regression_coefficents_input[1] + linear_predictor)*(1+duration_diabetes_input)^regression_coefficents_input[2]
p = 1 - exp(H_t1 -H_t2)
return(list(#H_t1 = H_t1, # no need to return the H's, keep them for now just for validation purposes
#H_t2 = H_t2,
p = p))
}
# Validation of the Weibull events
# CHF females
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.00657647
# CHF males
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.00657647
# Is the predicted probability plausible? --> Gimon
# Is a difference between gender expected? NO
# IHD females
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.0009983311
# IHD males
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.001698897
# Is the predicted probability plausible? --> Gimon
# Is a difference between gender expected? Yes, negative coefficient for females.
# First MI males (for females there is a different equation)
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.002285789
# Is the predicted probability plausible? --> Gimon
# First MI females (for males there is a different equation)
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.02571863
# Is the predicted probability plausible? --> Gimon. It looks quite large compared to males. Does it make sense?
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
macrovascular_risk_equations$FMIFEMALE
validation_patient[1,] %>% select(risk_factors_macrovascular)
macrovascular_risk_equations$FMIFEMALE[-2]
macrovascular_risk_equations$FMIFEMALE
length(macrovascular_risk_equations$FMIFEMALE)
macrovascular_risk_equations$FMIFEMALE[3:24]
macrovascular_risk_equations$FMIFEMALE[3:24]*linear_predictor
macrovascular_risk_equations$FMIFEMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular)
sum(macrovascular_risk_equations$FMIFEMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular))
macrovascular_risk_equations$FMIMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular)
sum(macrovascular_risk_equations$FMIMALE[3:24]*validation_patient[1,] %>% select(risk_factors_macrovascular))
validation_patient[1,] %>% select(risk_factors_macrovascular)
macrovascular_risk_equations
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
validation_patient
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
validation_patient
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
# Macrovascular complications: UKPDS paper ESM Table 4. Macrovascular complications include CHF, IHD, MI and stroke.
# The risk factors used to predict macrovascular complications are read from the following file (UKPDS paper ESM Table 2):
macrovascular_risk_equations <- read.csv("input/UKPDS_macrovascular_coef.csv")
macrovascular_risk_equations
# The vector below contains the names of all risk factors used to predict macrovascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_macrovascular <- macrovascular_risk_equations$X[-(1:2)]
# Microvascular complications: UKPDS paper ESM Table 5. Microvascular complications include blindness, diabetic ulcer amputation and renal failure.
# The risk factors used to predict microvascular complications are read from the following file (UKPDS paper ESM Table 5):
microvascular_risk_equations <- read.csv("input/UKPDS_microvascular_coef.csv")
# The vector below contains the names of all risk factors used to predict microvascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_microvascular <- microvascular_risk_equations$X[-(1:2)]
# Risk of death: UKPDS paper ESM Table 6. Four equations depending on events and history:
mortality_risk_equations <- read.csv("input/UKPDS_mortality_coef.csv")
# The vector below contains the names of all risk factors used to predict death in the model.
risk_factors_mortality <- mortality_risk_equations$X[-(1:2)]
# Below we consider all the patient characteristics (38) that "define" a patient in this model.
risk_factors_simulation <- unique(sort(c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT",
risk_factors_macrovascular,
risk_factors_microvascular,
risk_factors_mortality)))
### UKPDS RISK FUNCTIONS ###
# Note that, with the notation used in the UKPDS paper, if ro = 1 then
# weibull distribution == exponential distribution. Thus, the same function "annual_p_weibull" can be used when an exponential
# distribution is assumed.
annual_p_weibull <- function(regression_coefficents_input, risk_factors_input, duration_diabetes_input){
risk_factors_input <- as.numeric(risk_factors_input) # delete if not needed
# Note: mind the format of the regression coefficients. It should be a list where the first two coefficients are
# lambda and ro (with the notation from UKPDS paper - hence the tail(,-2) command) and the rest are the coefficients
# for the risk factors associated to each complication.
linear_predictor <- sum(tail(regression_coefficents_input,n = -2)*c(risk_factors_input))
print(linear_predictor)
# Then H returns the value of the cumulative hazard function
H_t1 <- exp(regression_coefficents_input[1] + linear_predictor)*duration_diabetes_input^regression_coefficents_input[2]
H_t2 <- exp(regression_coefficents_input[1] + linear_predictor)*(1+duration_diabetes_input)^regression_coefficents_input[2]
p = 1 - exp(H_t1 -H_t2)
return(list(#H_t1 = H_t1, # no need to return the H's, keep them for now just for validation purposes
#H_t2 = H_t2,
p = p))
}
# CHF females
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.00657647
# CHF males
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.00657647
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
macrovascular_risk_equations$FMIFEMALE
sum(macrovascular_risk_equations$FMIFEMALE)
macrovascular_risk_equations$FMIFEMALE
macrovascular_risk_equations
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
macrovascular_risk_equations$FMIFEMALE
validation_patient[2,] %>% select(risk_factors_macrovascular)
macrovascular_risk_equations$FMIFEMALE*validation_patient[2,] %>% select(risk_factors_macrovascular)
macrovascular_risk_equations$FMIFEMALE
length(macrovascular_risk_equations$FMIFEMALE)
macrovascular_risk_equations$FMIFEMALE[2:24]*validation_patient[2,] %>% select(risk_factors_macrovascular)
sum(macrovascular_risk_equations$FMIFEMALE[2:24]*validation_patient[2,] %>% select(risk_factors_macrovascular))
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
sum(macrovascular_risk_equations$FMIFEMALE[3:24]*validation_patient[2,] %>% select(risk_factors_macrovascular))
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
macrovascular_risk_equations$FMIFEMALE[3:24]
exp(-8.7)
exp(-8.708 + 0)*8.44^1.376
validation_patient[1,]
validation_patient[1,]$YEAR
exp(-8.708 + 0)*8.44^1.376
exp(-8.708 + 0)*(1+8.44)^1.376
(exp(-8.708 + 0)*8.44^1.376) - (exp(-8.708 + 0)*(1+8.44)^1.376)
exp((exp(-8.708 + 0)*8.44^1.376) - (exp(-8.708 + 0)*(1+8.44)^1.376))
- exp((exp(-8.708 + 0)*8.44^1.376) - (exp(-8.708 + 0)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 0)*8.44^1.376) - (exp(-8.708 + 0)*(1+8.44)^1.376))
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
1 - exp((exp(-8.708 + 0)*8.44^1.376) - (exp(-8.708 + 0)*(1+8.44)^1.376))
#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# We can change patient characteristics for testing purposes below (un-comment)
# Special interest on those characteristics that are targeted as treatment effect: see how a expected treatment effect
# would impact the annual risk.
# validation_patient$CURR.AGE <- 35
# validation_patient$HbA1c <- 3.8
# validation_patient$SBP <- 129
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
# Complications
# Macrovascular complications: UKPDS paper ESM Table 4. Macrovascular complications include CHF, IHD, MI and stroke.
# The risk factors used to predict macrovascular complications are read from the following file (UKPDS paper ESM Table 2):
macrovascular_risk_equations <- read.csv("input/UKPDS_macrovascular_coef.csv")
# The vector below contains the names of all risk factors used to predict macrovascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_macrovascular <- macrovascular_risk_equations$X[-(1:2)]
# Microvascular complications: UKPDS paper ESM Table 5. Microvascular complications include blindness, diabetic ulcer amputation and renal failure.
# The risk factors used to predict microvascular complications are read from the following file (UKPDS paper ESM Table 5):
microvascular_risk_equations <- read.csv("input/UKPDS_microvascular_coef.csv")
# The vector below contains the names of all risk factors used to predict microvascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_microvascular <- microvascular_risk_equations$X[-(1:2)]
# Risk of death: UKPDS paper ESM Table 6. Four equations depending on events and history:
mortality_risk_equations <- read.csv("input/UKPDS_mortality_coef.csv")
# The vector below contains the names of all risk factors used to predict death in the model.
risk_factors_mortality <- mortality_risk_equations$X[-(1:2)]
# Below we consider all the patient characteristics (38) that "define" a patient in this model.
risk_factors_simulation <- unique(sort(c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT",
risk_factors_macrovascular,
risk_factors_microvascular,
risk_factors_mortality)))
### UKPDS RISK FUNCTIONS ###
# Note that, with the notation used in the UKPDS paper, if ro = 1 then
# weibull distribution == exponential distribution. Thus, the same function "annual_p_weibull" can be used when an exponential
# distribution is assumed.
annual_p_weibull <- function(regression_coefficents_input, risk_factors_input, duration_diabetes_input){
risk_factors_input <- as.numeric(risk_factors_input) # delete if not needed
# Note: mind the format of the regression coefficients. It should be a list where the first two coefficients are
# lambda and ro (with the notation from UKPDS paper - hence the tail(,-2) command) and the rest are the coefficients
# for the risk factors associated to each complication.
linear_predictor <- sum(tail(regression_coefficents_input,n = -2)*c(risk_factors_input))
print(linear_predictor)
# Then H returns the value of the cumulative hazard function
H_t1 <- exp(regression_coefficents_input[1] + linear_predictor)*duration_diabetes_input^regression_coefficents_input[2]
H_t2 <- exp(regression_coefficents_input[1] + linear_predictor)*(1+duration_diabetes_input)^regression_coefficents_input[2]
p = 1 - exp(H_t1 -H_t2)
return(list(H_t1 = H_t1, # no need to return the H's, keep them for now just for validation purposes
H_t2 = H_t2,
p = p))
}
# Validation of the Weibull events
# CHF females and males is the same equation
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.00657647
# IHD females and males. Is a difference between gender expected? Yes, negative coefficient for females.
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.0009983311
annual_p_weibull(macrovascular_risk_equations$IHD,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.001698897
# First MI males
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.002285789
# First MI females
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
# [1] 0.02571863
# This looks quite large compared to males. Does not make sense. Confirmed with simulation results.
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$H_t1
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$H_t2
exp(-8.708 + 0)*(1+8.44)^1.376)
exp(-8.708 + 0)*(1+8.44)^1.376
exp(-8.708 + 3.91)*(1+8.44)^1.376
exp(-8.708 + 3.91)*(8.44)^1.376
1 - exp((exp(-8.708 + 0)*8.44^1.376) - (exp(-8.708 + 0)*(1+8.44)^1.376))
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$H_t2
annual_p_weibull(macrovascular_risk_equations$FMIFEMALE,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
1 - exp((exp(-8.708 + 3.91)*8.44^1.376) - (exp(-8.708 + 3.91)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 3)*8.44^1.376) - (exp(-8.708 + 3)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 3)*8.44^1.376) - (exp(-8.708 + 2.5)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 2.5)*8.44^1.376) - (exp(-8.708 + 2.5)*(1+8.44)^1.376))
annual_p_weibull(macrovascular_risk_equations$FMIMALE,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
1 - exp((exp(-8.708 + 2.7)*8.44^1.376) - (exp(-8.708 + 2.7)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 0)*8.44^1.376) - (exp(-8.708 + 0)*(1+8.44)^1.376))
validation_patient[1,]
validation_patient[1,]$AGE.DIAG
validation_patient[1,]
1 - exp((exp(-8.708 + 48.56*0.041)*8.44^1.376) - (exp(-8.708 + + 48.56*0.041)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 48.56*0.041)*8.44^1.376) - (exp(-8.708 + 48.56*0.041)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 48.56*0.041)*8.44^1.376) - (exp(-8.708 + 48.56*0.041)*(1+8.44)^1.376))
validation_patient[1,]$eGFR60less
validation_patient[1,]$HbA1c
1 - exp((exp(-8.708 + 48.56*0.041 + 8.8*0.078)*8.44^1.376) - (exp(-8.708 + 48.56*0.041  + 8.8*0.078)*(1+8.44)^1.376))
validation_patient[1,]$LDL
validation_patient[1,]$LDL35more
validation_patient[1,]$LDL35more
validation_patient[1,]$eGFR
validation_patient[1,]$eGFRless
validation_patient[1,]$eGFR60less
1 - exp((exp(-8.708 + 48.56*0.041 + 8.8*0.078)*8.44^1.376) - (exp(-8.708 + 48.56*0.041  + 8.8*0.078)*(1+8.44)^1.376))
validation_patient[1,]$LDL35more
1 - exp((exp(-8.708 + 48.56*0.041 + 8.8*0.078)*8.44^1.376) - (exp(-8.708 + 48.56*0.041  + 8.8*0.078)*(1+8.44)^1.376))
validation_patient[1,]$MMALB
validation_patient[1,]$PVD
validation_patient[1,]$SBP
1 - exp((exp(-8.708 + 48.56*0.041 + 8.8*0.078 + 13.9*0.056)*8.44^1.376) - (exp(-8.708 + 48.56*0.041 + 8.8*0.078 + 13.9*0.056)*(1+8.44)^1.376))
validation_patient[1,]$SMOKER
validation_patient[1,]$WBC
1 - exp((exp(-8.708 + 48.56*0.041 + 8.8*0.078 + 13.9*0.056+ 6.6*0.07)*8.44^1.376) - (exp(-8.708 + 48.56*0.041 + 8.8*0.078 + 13.9*0.056 + 6.6*0.07)*(1+8.44)^1.376))
1 - exp((exp(-8.708)*8.44^1.376) - (exp(-8.708)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 48.56*0.041)*8.44^1.376) - (exp(-8.708 + 48.56*0.041)*(1+8.44)^1.376))
1 - exp((exp(-8.708 + 48.56*0.041 + 8.8*0.078 + 13.9*0.056+ 6.6*0.07)*8.44^1) - (exp(-8.708 + 48.56*0.041 + 8.8*0.078 + 13.9*0.056 + 6.6*0.07)*(1+8.44)^1))
validation_patient[1,]
validation_patient[1,]$CURR.AGE
validation_patient[1,]$YEAR
validation_patient[1,]$HbA1c
validation_patient[1,]$SBP
validation_patient[1,]$HDL
validation_patient[1,]$LDL
#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# We can change patient characteristics for testing purposes below (un-comment)
# Special interest on those characteristics that are targeted as treatment effect: see how a expected treatment effect
# would impact the annual risk.
# validation_patient$CURR.AGE <- 35
# validation_patient$HbA1c <- 3.8
# validation_patient$SBP <- 129
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient
validation_patient[1,]
validation_patient[1,]$LDL
validation_patient[1,]$HDL
3.08+1.19
validation_patient[1,]$SBP
validation_patient[1,]$HbA1c
#########################################################
########## VALIDATION UKPDS RISK EQUATIONS ##############
#########################################################
source("setup.R")
# Patient characteristics
validation_patient <- read.csv("input/UK/baseline_characteristics_UK.csv", sep=",")
# We can change patient characteristics for testing purposes below (un-comment)
# Special interest on those characteristics that are targeted as treatment effect: see how a expected treatment effect
# would impact the annual risk.
# validation_patient$CURR.AGE <- 35
# validation_patient$HbA1c <- 3.8
# validation_patient$SBP <- 129
retirement_age_input <- 65
validation_patient$AGE.DIAG <- validation_patient$CURR.AGE - validation_patient$YEAR
validation_patient$CURR.AGE.SCALE.INF  <- (validation_patient$CURR.AGE - 72.5474088)/10.4626624
validation_patient$CURR.AGE.SCALE.PROD <- (validation_patient$CURR.AGE - 60.2737989)/6.1177269
validation_patient$CURR.AGE.2 <- (validation_patient$CURR.AGE)^2
validation_patient$INF.CARE   <- 0
# ifelse(validation_patient$CURR.AGE >= retirement_age_input, validation_patient$EMPLOYED <- 0,
#        {baseline_employed_prob <- apply(validation_patient %>% select(risk_factors_employment), 1, function(x) annual_p_bernoulli(employment_equations$employment_coef,x)$p)
#        validation_patient$EMPLOYED <- unlist(lapply(baseline_employed_prob, function(x) rbinom(1,1,x))) #EMPLOYED = yes/no
#        })
# validation_patient$PROD.LOSS <- 0
validation_patient$BMI1 <- if_else(validation_patient$BMI < 18.5, 1, 0)
validation_patient$BMI3 <- if_else(validation_patient$BMI >= 25, 1, 0)
# .EVENT variable names
event_vars <- c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT", "AMP1.EVENT", "AMP2.EVENT",
"MI.EVENT", "IHD.EVENT", "RENAL.EVENT", "STROKE.EVENT")
validation_patient[event_vars] <- 0
validation_patient$eGFR       <- validation_patient$eGFR/10
validation_patient$eGFR60more <- if_else(validation_patient$eGFR >= 6, validation_patient$eGFR, 0)
validation_patient$eGFR60less <- if_else(validation_patient$eGFR <  6, validation_patient$eGFR, 0)
validation_patient$HDL <- validation_patient$HDL*10
validation_patient$HEART.R <- validation_patient$HEART.R/10
validation_patient$LDL       <- validation_patient$LDL*10
validation_patient$LDL35more <- if_else(validation_patient$LDL >= 35, validation_patient$LDL, 0)
validation_patient$SBP <- validation_patient$SBP/10
validation_patient
# Complications
# Macrovascular complications: UKPDS paper ESM Table 4. Macrovascular complications include CHF, IHD, MI and stroke.
# The risk factors used to predict macrovascular complications are read from the following file (UKPDS paper ESM Table 2):
macrovascular_risk_equations <- read.csv("input/UKPDS_macrovascular_coef.csv")
# The vector below contains the names of all risk factors used to predict macrovascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_macrovascular <- macrovascular_risk_equations$X[-(1:2)]
# Microvascular complications: UKPDS paper ESM Table 5. Microvascular complications include blindness, diabetic ulcer amputation and renal failure.
# The risk factors used to predict microvascular complications are read from the following file (UKPDS paper ESM Table 5):
microvascular_risk_equations <- read.csv("input/UKPDS_microvascular_coef.csv")
# The vector below contains the names of all risk factors used to predict microvascular complications in the model.
# this is needed below and in the simulation function.
risk_factors_microvascular <- microvascular_risk_equations$X[-(1:2)]
# Risk of death: UKPDS paper ESM Table 6. Four equations depending on events and history:
mortality_risk_equations <- read.csv("input/UKPDS_mortality_coef.csv")
# The vector below contains the names of all risk factors used to predict death in the model.
risk_factors_mortality <- mortality_risk_equations$X[-(1:2)]
# Below we consider all the patient characteristics (38) that "define" a patient in this model.
risk_factors_simulation <- unique(sort(c("CHF.EVENT", "BLIND.EVENT", "ULCER.EVENT",
risk_factors_macrovascular,
risk_factors_microvascular,
risk_factors_mortality)))
### UKPDS RISK FUNCTIONS ###
# Note that, with the notation used in the UKPDS paper, if ro = 1 then
# weibull distribution == exponential distribution. Thus, the same function "annual_p_weibull" can be used when an exponential
# distribution is assumed.
annual_p_weibull <- function(regression_coefficents_input, risk_factors_input, duration_diabetes_input){
risk_factors_input <- as.numeric(risk_factors_input) # delete if not needed
# Note: mind the format of the regression coefficients. It should be a list where the first two coefficients are
# lambda and ro (with the notation from UKPDS paper - hence the tail(,-2) command) and the rest are the coefficients
# for the risk factors associated to each complication.
linear_predictor <- sum(tail(regression_coefficents_input,n = -2)*c(risk_factors_input))
print(linear_predictor)
# Then H returns the value of the cumulative hazard function
H_t1 <- exp(regression_coefficents_input[1] + linear_predictor)*duration_diabetes_input^regression_coefficents_input[2]
H_t2 <- exp(regression_coefficents_input[1] + linear_predictor)*(1+duration_diabetes_input)^regression_coefficents_input[2]
p = 1 - exp(H_t1 -H_t2)
return(list(H_t1 = H_t1, # no need to return the H's, keep them for now just for validation purposes
H_t2 = H_t2,
p = p))
}
# Validation of the Weibull events
# CHF females and males is the same equation
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[1,] %>% select(risk_factors_macrovascular),validation_patient[1,"YEAR"])$p
annual_p_weibull(macrovascular_risk_equations$CHF,validation_patient[2,] %>% select(risk_factors_macrovascular),validation_patient[2,"YEAR"])$p
# [1] 0.00657647
validation_patient[1,]$AGE.DIAG
validation_patient[1,]$YEAR
validation_patient[1,]$SBP
validation_patient[1,]$HDL
validation_patient[1,]$LDL
LDL
validation_patient[1,]$LDL
